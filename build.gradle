plugins {
    id 'java'
}

group 'mastery'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    mavenCentral()
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.7'
    compile 'commons-cli:commons-cli:1.4'
    compile 'junit:junit:4.13.2'
    compile 'org.jetbrains:annotations:21.0.1'
    compile 'net.sf.trove4j:trove4j:3.0.3'
    compile 'com.sparkjava:spark-core:2.9.3'
    compile('org.rendersnake:rendersnake:1.9.0') {
		exclude group: 'javax.servlet', module: 'servlet-api'
	}
    compile 'org.slf4j:slf4j-nop:1.7.32'
    compile 'com.github.javaparser:javaparser-core:3.22.1'
}

task runMain(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = "mastery.Main"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes 'Main-Class': 'mastery.Main'
    }

    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

// Uncomment the following if you want to debug the unit tests
// test {
//     testLogging.showStandardStreams = true
// }
